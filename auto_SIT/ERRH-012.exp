#!/usr/bin/expect -f
#
# This script try to prepare the env for SIT case ERRH-012.
# It login the system, setup the env and run stressKernel to add the average 
# system loading. When finish all of those, it will note the user to open a
# vterm to the system and perform the testing.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#

source common.exp

set timeout -1
spawn sh -c ". ~/.bashrc;assh $hostname"
match_max 100000
expect -re $prompt
send -- "rpm -q gcc && rpm -q glibc-devel && echo \"repuired packages installed.\" || echo \"missing some packages.\""
expect -exact "some packages.\"" 
send -- "\r"
expect {
	-re "repuired packages installed.*$prompt" {}
	-re "missing some packages.*$prompt" {
		blue_p "\nSome repuired packages missing, please check it and try again\n"
		interact_back
	}
}
send -- "mount |grep -q /LTE || { mkdir /LTE;mount lslte:/LTE /LTE; } && /LTE/images/apps/pthreads_test/1.install && { cd /pthreads_test;./2.go &>/dev/null & } && echo 1 >/proc/sys/kernel/sysrq && echo \"Prepare is successful.\" || echo \"failed\""
expect -exact "\"failed\""
send -- "\r"
expect {
	-re "Prepare is successful.*$prompt" {
		blue_p "\nPrepare is OK, please try to connect a vterm to the system\n"
		blue_p "and preform the ctrl-o-x\n"
		send "\r"
		interact
	}
	-re "failed.*$prompt" {
		blue_p "\nPrepare is failed, please check this problem and try again.\n"
		send "\r"
		interact
	}
}
