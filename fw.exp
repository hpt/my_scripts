#!/usr/bin/expect --
# for passing through the local/remote BSO firewall
#exp_internal -f /tmp/rw_debug 0
proc help {} {
	global argv0
	puts "Usage: $argv0 \[-h] \[-t timeout]"
	exit 0
}

while {[llength $argv] > 0} {
	set flag [lindex $argv 0]
	if {0==[regexp "^-" $flag]} {
		help
	}
	set argv [lrange $argv 1 end]
	switch -- $flag \
		"-h" {
			help
		} \
		"-t" {
			set timeout [lindex $argv 0]
			set argv [lrange $argv 1 end]
			continue
		} \
		default {
			help
		}
}

log_user 0

spawn telnet uptwiki
set rid $spawn_id

spawn telnet plinuxsrv
set lid $spawn_id

set id_list [list $rid $lid]

proc check {} {
	global id_list rid lid location expect_out

	if {$expect_out(spawn_id) == $rid} {
		set location "remote"
		set i [lsearch $id_list $rid]
		set id_list [lreplace $id_list $i $i]
	} else {
		set location "local"
		set i [lsearch $id_list $lid]
		set id_list [lreplace $id_list $i $i]
	}
}

proc if_continue {} {
	global id_list
	if [llength $id_list] exp_continue
}

expect_after {
	-i id_list
	timeout {
		puts "Timeouted when try to go through the firewall."
		puts "Please try again."
		exit 1
	}
}

expect {
	-i id_list
	"login: " {
		check
		send_user "Seems that $location firewall had been past.\n"
		close -i $expect_out(spawn_id)
		wait -i $expect_out(spawn_id)
		if_continue
	}
	"Username: " {
		send -i $expect_out(spawn_id) "hanpt@cn.ibm.com\r"
		exp_continue
	}
	"Password: " {
		set waited_id $expect_out(spawn_id)
		stty -echo
		if ![info exists passwd] {
			send_user "Please input your internat password: "
			expect_user  {
				-re "(\[^\n]*)\n" {send_user "\n"}
				timeout {
					send_user "Forget your password?\n"
					exit
				}
			}
			set passwd $expect_out(1,string)
		} 
		send -i $waited_id "$passwd\r"
		stty echo
		exp_continue
	}
	"Successful" {
		check
		send_user "Passing through $location BSO successfully\n"
		close -i $expect_out(spawn_id)
		wait -i $expect_out(spawn_id)
		if_continue
	}
	"Try Again" {
		check
		send_user "Authentication failed to $location BSO, please try again.\n"
		close -i $expect_out(spawn_id)
		wait -i $expect_out(spawn_id)
		if_continue
	}
	eof {
		check
		send_user "telnet to $location BSO closed, please try again.\n"
		if_continue
	}
}
